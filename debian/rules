#!/usr/bin/make -f

SHELL    := sh -e
SOURCE := $(shell dpkg-parsechangelog -SSource)
VERSION := $(shell dpkg-parsechangelog -SVersion)
VERSION_UPSTREAM := $(shell echo "$(VERSION)" | sed -e 's,-[^-]*$$,,')
VERSION_BINNMU := $(shell echo "$(VERSION)" | sed -rne 's,.*\+b([0-9]+)$$,\1,p')
VERSION_SOURCE := $(patsubst %+b$(VERSION_BINNMU),%,$(VERSION))

include /usr/share/dpkg/architecture.mk

include debian/rules.defs

ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
  DEBIAN_KERNEL_JOBS := $(subst parallel=,,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
endif
ifdef DEBIAN_KERNEL_JOBS
  MAKEFLAGS += -j$(DEBIAN_KERNEL_JOBS)
endif
BUILD_STAGE1 := $(filter stage1,$(DEB_BUILD_PROFILES))
ifneq (,$(filter nodoc,$(DEB_BUILD_PROFILES)))
# This only disables building the linux-doc package.
# The rules for tools packages check separately for the 'nodoc' profile.
  MAKEFLAGS += DO_DOCS=False
endif
ifneq (,$(filter pkg.linux.notools,$(DEB_BUILD_PROFILES)))
  MAKEFLAGS += DO_TOOLS_VERSIONED=False DO_TOOLS_UNVERSIONED=False
endif

.NOTPARALLEL:

source: $(STAMPS_DIR)/gencontrol
	dh_testdir
	$(MAKE) -f debian/rules.gen source

setup: $(STAMPS_DIR)/gencontrol
	dh_testdir
	$(MAKE) -f debian/rules.gen setup_$(DEB_HOST_ARCH)

build: build-arch build-indep

build-arch: $(STAMPS_DIR)/gencontrol
	dh_testdir
ifndef BUILD_STAGE1
	$(MAKE) -f debian/rules.gen build-arch_$(DEB_HOST_ARCH)
endif

build-indep: $(STAMPS_DIR)/gencontrol
	dh_testdir
ifndef BUILD_STAGE1
	$(MAKE) -f debian/rules.gen build-indep
endif

binary:	binary-indep binary-arch

binary-arch: build-arch
	dh_testdir
ifdef BUILD_STAGE1
	$(MAKE) -f debian/rules.gen binary-libc-dev_$(DEB_HOST_ARCH)
else
	$(MAKE) -f debian/rules.gen binary-arch_$(DEB_HOST_ARCH)
endif

binary-indep: build-indep
	dh_testdir
ifndef BUILD_STAGE1
	$(MAKE) -f debian/rules.gen binary-indep
endif

clean: debian/control
	dh_testdir
	rm -rf $(BUILD_DIR) $(STAMPS_DIR) debian/lib/python/debian_linux/*.pyc debian/lib/python/debian_linux/__pycache__ $$(find debian -maxdepth 1 -type d -name 'linux-*') debian/*-modules-*-di* debian/kernel-image-*-di* debian/xen-linux-system-* debian/*-tmp
	rm -f debian/config.defines.dump debian/linux-headers-* debian/linux-image-* debian/linux-perf-* debian/rules.gen
	dh_clean

CONTROL_FILES = $(BUILD_DIR)/version-info $(wildcard debian/templates/*.in)
CONTROL_FILES += debian/config/defines $(wildcard debian/config/*/defines) $(wildcard debian/config/*/*/defines)
CONTROL_FILES += debian/installer/kernel-versions debian/installer/package-list

# debian/bin/gencontrol.py uses debian/changelog as input, but the
# output only depends on the source name and version.  To avoid
# frequent changes to debian/control.md5sum, include only those fields
# in the checksum.
$(BUILD_DIR)/version-info: debian/changelog
	mkdir -p $(@D)
	printf >$@ 'Source: %s\nVersion: %s\n' $(SOURCE) $(VERSION_SOURCE)

$(STAMPS_DIR)/gencontrol: debian/bin/gencontrol.py debian/control debian/tests/control $(CONTROL_FILES)
# Hash randomisation makes the pickled config unreproducible
	PYTHONHASHSEED=0 $<
	mkdir -p $(@D)
	touch $@

debian/control debian/tests/control: debian/bin/gencontrol.py $(CONTROL_FILES)
ifeq ($(wildcard debian/control.md5sum),)
	$(MAKE) -f debian/rules debian/control-real
else
	md5sum --check debian/control.md5sum --status || \
		$(MAKE) -f debian/rules debian/control-real
endif

debian/control-real: debian/bin/gencontrol.py $(CONTROL_FILES)
	$< --only-essential
	md5sum $^ > debian/control.md5sum
	@echo
	@echo This target is made to fail intentionally, to make sure
	@echo that it is NEVER run during the automated build. Please
	@echo ignore the following error, the debian/control file has
	@echo been generated SUCCESSFULLY.
	@echo
	@echo You may need to commit changes to the control files now.
	@echo
	exit 1

.PHONY: clean build setup binary-indep binary-arch binary
