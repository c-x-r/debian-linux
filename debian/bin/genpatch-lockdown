#!/usr/bin/python3

import os
import os.path
import subprocess
import sys
import tempfile


def main(repo='.', range='torvalds/master..dhowells/efi-lock-down'):
    from subprocess import PIPE

    bug_line = 'Bug-Debian: https://bugs.debian.org/820008'

    # Rebase, dropping old commits
    rebase_env = os.environ.copy()
    rebase_env['GIT_EDITOR'] = os.path.join(os.getcwd(),
                                            'debian/bin/git-editor-drop')
    rebase_env['DEBIAN_KERNEL_DROP_TYPE'] = 'fixed'
    rebase_env['DEBIAN_KERNEL_DROP_PATTERN'] = bug_line
    subprocess.check_call(['git', 'debrebase', '-i'], env=rebase_env)

    other_repo_env = os.environ.copy()
    other_repo_env['GIT_DIR'] = os.path.join(repo, '.git')

    # Add Bug-Debian and Origin pseudo-headers to all commit messages.
    def format_patch(rev, mbox):
        mbox.write('From 0 Mon Sep 17 00:00:00 2001\n')
        with subprocess.Popen(['git', 'format-patch', '--stdout', rev, '-1'],
                              env=other_repo_env,
                              stdout=PIPE, encoding='utf-8') \
                 as proc:
            in_header = True
            for line in proc.stdout:
                if in_header and line == '\n':
                    mbox.write(
                        '\n'
                        'Origin: https://git.kernel.org/pub/scm/linux/kernel'
                        '/git/dhowells/linux-fs.git/commit?id=%s\n'
                        '%s\n'
                        % (rev, bug_line))
                    in_header = False
                mbox.write(line)
            if proc.wait():
                raise RuntimeError('git format-patch failed')
        mbox.write('\n')

    with tempfile.NamedTemporaryFile(mode='w', encoding='utf-8',
                                     suffix='.mbox', delete=False) as mbox:
        print("Writing patches to %s" % mbox.name)

        # XXX No signature to verify
        with subprocess.Popen(['git', 'rev-list', '--reverse', range],
                              env=other_repo_env,
                              stdout=PIPE, encoding='utf-8') as proc:
            for line in proc.stdout:
                rev = line.strip('\n')
                format_patch(rev, mbox)
            if proc.wait():
                raise RuntimeError('git rev-list failed')

        # Try "git am" and remove the mbox if successful.  If it fails,
        # leave the mbox in place to allow recovery.
        mbox.flush()
        mbox.seek(0)
        subprocess.check_call(['git', 'am'], stdin=mbox.fileno())
        os.unlink(mbox.name)


if __name__ == '__main__':
    if not (1 <= len(sys.argv) <= 3):
        sys.stderr.write('''\
Usage: %s [REPO [REVISION-RANGE]]
REPO is a git repo containing the REVISION-RANGE.  The default repo is
. and the default range is torvalds/master..dhowells/efi-lock-down.
''' % sys.argv[0])
        sys.exit(2)
    main(*sys.argv[1:])
